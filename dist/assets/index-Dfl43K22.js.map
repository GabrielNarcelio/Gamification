{"version":3,"file":"index-Dfl43K22.js","sources":["../../src/utils/config.js","../../src/services/state.js","../../src/services/api.js","../../src/utils/helpers.js","../../src/components/LoginComponent.js","../../src/components/TasksComponent.js","../../src/components/RewardsComponent.js","../../src/components/RankingComponent.js","../../src/components/HistoryComponent.js","../../src/components/AdminPanelComponent.js","../../src/components/DashboardComponent.js","../../src/App.js","../../src/main.js"],"sourcesContent":["// Configurações da aplicação\r\n\r\nexport const CONFIG = {\r\n  API_URL: \"https://script.google.com/macros/s/AKfycbxo3CcWaKdFgRob-jyIwv359SDqWI2_nQc92SNlryqvPBXIrQtL4jJZORElseJqFmWB/exec\",\r\n  APP_NAME: \"Sistema de Gamificação de Tarefas\",\r\n  VERSION: \"2.0.0\"\r\n};\r\n\r\nexport const ADMIN_CREDENTIALS = {\r\n  username: \"admin\",\r\n  password: \"admin123\"\r\n};\r\n\r\nexport const MESSAGES = {\r\n  LOGIN_SUCCESS: \"Login realizado com sucesso!\",\r\n  LOGIN_ERROR: \"Usuário ou senha incorretos.\",\r\n  TASK_CREATED: \"Tarefa criada com sucesso!\",\r\n  TASK_COMPLETED: \"Tarefa concluída!\",\r\n  REWARD_REDEEMED: \"Prêmio resgatado!\",\r\n  INSUFFICIENT_POINTS: \"Pontos insuficientes.\",\r\n  USER_CREATED: \"Usuário criado com sucesso!\",\r\n  USER_UPDATED: \"Usuário editado com sucesso!\",\r\n  USER_DELETED: \"Usuário excluído com sucesso!\",\r\n  SHEET_STRUCTURED: \"Planilha estruturada com sucesso!\",\r\n  GENERIC_ERROR: \"Erro inesperado. Tente novamente.\"\r\n};\r\n","// Gerenciador de estado da aplicação\r\n\r\nimport { ADMIN_CREDENTIALS } from '@/utils/config.js';\r\n\r\nclass StateManager {\r\n  constructor() {\r\n    this.state = {\r\n      user: null,\r\n      userPoints: 0,\r\n      userType: null\r\n    };\r\n    this.listeners = new Set();\r\n  }\r\n\r\n  getState() {\r\n    return { ...this.state };\r\n  }\r\n\r\n  setState(newState) {\r\n    this.state = { ...this.state, ...newState };\r\n    this.notifyListeners();\r\n  }\r\n\r\n  subscribe(listener) {\r\n    this.listeners.add(listener);\r\n    return () => this.listeners.delete(listener);\r\n  }\r\n\r\n  notifyListeners() {\r\n    this.listeners.forEach(listener => listener(this.getState()));\r\n  }\r\n\r\n  // Métodos específicos para login/logout\r\n  login(user, points, type) {\r\n    this.setState({\r\n      user,\r\n      userPoints: points,\r\n      userType: type\r\n    });\r\n  }\r\n\r\n  loginAsAdmin() {\r\n    const adminUser = {\r\n      nome: ADMIN_CREDENTIALS.username,\r\n      senha: ADMIN_CREDENTIALS.password,\r\n      tipo: 'Administrador',\r\n      pontos: 0\r\n    };\r\n\r\n    this.setState({\r\n      user: adminUser,\r\n      userPoints: 0,\r\n      userType: 'Administrador'\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      user: null,\r\n      userPoints: 0,\r\n      userType: null\r\n    });\r\n  }\r\n\r\n  updatePoints(points) {\r\n    this.setState({ userPoints: points });\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.state.user !== null;\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.state.userType === 'Administrador';\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return this.state.user;\r\n  }\r\n\r\n  getUserPoints() {\r\n    return this.state.userPoints;\r\n  }\r\n}\r\n\r\nexport const stateManager = new StateManager();\r\n","// Service para comunicação com Google Apps Script API\r\n\r\nimport { CONFIG } from '@/utils/config.js';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseUrl = CONFIG.API_URL;\r\n  }\r\n\r\n  async login(username, password) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=login&name=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Login Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTasks() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getTasks`);\r\n      const data = await response.json();\r\n      return Array.isArray(data) ? data : [];\r\n    } catch (error) {\r\n      console.error('API Get Tasks Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createTask(title, description, points, creator) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=createTask&title=${encodeURIComponent(title)}&description=${encodeURIComponent(description)}&points=${points}&creator=${encodeURIComponent(creator)}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Create Task Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async concludeTask(taskId, username) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=concludeTask&id=${taskId}&name=${encodeURIComponent(username)}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Conclude Task Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getRewards() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getRewards`);\r\n      const data = await response.json();\r\n      return Array.isArray(data) ? data : [];\r\n    } catch (error) {\r\n      console.error('API Get Rewards Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async redeemReward(rewardId, username) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=redeemReward&id=${rewardId}&name=${encodeURIComponent(username)}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Redeem Reward Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getRanking() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getRanking`);\r\n      const data = await response.json();\r\n      \r\n      // Verificar se a resposta é um array ou objeto\r\n      if (Array.isArray(data)) {\r\n        return data;\r\n      } else if (data && typeof data === 'object') {\r\n        // Se for um objeto com propriedade success, pode ser um erro\r\n        if (data.success === false) {\r\n          console.error('Ranking API Error:', data.message);\r\n          return [];\r\n        }\r\n        // Se não for um array, tentar encontrar os dados\r\n        return data.data || data.ranking || [];\r\n      }\r\n      \r\n      return [];\r\n    } catch (error) {\r\n      console.error('API Get Ranking Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getHistory(username) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getHistory&name=${encodeURIComponent(username)}`);\r\n      const data = await response.json();\r\n      return Array.isArray(data) ? data : [];\r\n    } catch (error) {\r\n      console.error('API Get History Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAllHistory() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getAllHistory`);\r\n      const data = await response.json();\r\n      return Array.isArray(data) ? data : [];\r\n    } catch (error) {\r\n      console.error('API Get All History Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getUsers() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=getUsers`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Get Users Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createUser(user) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=createUser&name=${encodeURIComponent(user.nome)}&password=${encodeURIComponent(user.senha)}&type=${encodeURIComponent(user.tipo)}&points=${user.pontos}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Create User Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateUser(userId, user) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=editUser&userId=${encodeURIComponent(userId)}&name=${encodeURIComponent(user.nome)}&password=${encodeURIComponent(user.senha)}&type=${encodeURIComponent(user.tipo)}&points=${user.pontos}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Update User Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=deleteUser&userId=${encodeURIComponent(userId)}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Delete User Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async structureSheet() {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}?action=estruturarPlanilha`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API Structure Sheet Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const apiService = new ApiService();\r\n","// Utilitários diversos\r\n\r\nexport function formatDate(date = new Date()) {\r\n  return date.toLocaleDateString('pt-BR', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n}\r\n\r\nexport function validateRequired(value, fieldName) {\r\n  if (!value.trim()) {\r\n    return `${fieldName} é obrigatório.`;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function validatePoints(value) {\r\n  const points = parseInt(value);\r\n  if (isNaN(points) || points < 0) {\r\n    return 'Os pontos devem ser um número maior ou igual a zero.';\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function validateTaskPoints(value) {\r\n  const points = parseInt(value);\r\n  if (isNaN(points) || points < 1) {\r\n    return 'Os pontos devem ser um número maior que zero.';\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return (...args) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\nexport function throttle(func, limit) {\r\n  let inThrottle;\r\n  return (...args) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n\r\nexport function escapeHtml(text) {\r\n  const div = document.createElement('div');\r\n  div.textContent = text;\r\n  return div.innerHTML;\r\n}\r\n\r\nexport function createLoadingButton(button, loadingText) {\r\n  const originalText = button.textContent || '';\r\n  const originalDisabled = button.disabled;\r\n  \r\n  button.textContent = loadingText;\r\n  button.disabled = true;\r\n  \r\n  return () => {\r\n    button.textContent = originalText;\r\n    button.disabled = originalDisabled;\r\n  };\r\n}\r\n","// Componente de Login\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { stateManager } from '@/services/state.js';\r\nimport { ADMIN_CREDENTIALS, MESSAGES } from '@/utils/config.js';\r\nimport { validateRequired, createLoadingButton } from '@/utils/helpers.js';\r\n\r\nexport class LoginComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.render();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div class=\"login-container\">\r\n        <div class=\"login-form\">\r\n          <h1>Sistema de Gamificação</h1>\r\n          <div class=\"form-group\">\r\n            <label for=\"login-username\">Usuário:</label>\r\n            <input type=\"text\" id=\"login-username\" placeholder=\"Digite seu usuário\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"login-password\">Senha:</label>\r\n            <input type=\"password\" id=\"login-password\" placeholder=\"Digite sua senha\" />\r\n          </div>\r\n          <button id=\"login-button\" class=\"btn btn-primary\">Entrar</button>\r\n          <div id=\"login-error\" class=\"error-message\"></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    const usernameInput = this.container.querySelector('#login-username');\r\n    const passwordInput = this.container.querySelector('#login-password');\r\n    const loginButton = this.container.querySelector('#login-button');\r\n\r\n    // Enter key support\r\n    [usernameInput, passwordInput].forEach(input => {\r\n      input.addEventListener('keypress', (e) => {\r\n        if (e.key === 'Enter') {\r\n          this.handleLogin();\r\n        }\r\n      });\r\n    });\r\n\r\n    loginButton.addEventListener('click', () => this.handleLogin());\r\n  }\r\n\r\n  async handleLogin() {\r\n    const usernameInput = this.container.querySelector('#login-username');\r\n    const passwordInput = this.container.querySelector('#login-password');\r\n    const loginButton = this.container.querySelector('#login-button');\r\n    const errorDiv = this.container.querySelector('#login-error');\r\n\r\n    const username = usernameInput.value.trim();\r\n    const password = passwordInput.value.trim();\r\n\r\n    // Clear previous errors\r\n    errorDiv.textContent = '';\r\n\r\n    // Validation\r\n    const usernameError = validateRequired(username, 'Usuário');\r\n    const passwordError = validateRequired(password, 'Senha');\r\n\r\n    if (usernameError || passwordError) {\r\n      errorDiv.textContent = usernameError || passwordError || '';\r\n      return;\r\n    }\r\n\r\n    // Loading state\r\n    const resetButton = createLoadingButton(loginButton, '🔄 Entrando...');\r\n\r\n    try {\r\n      // Check admin credentials\r\n      if (username === ADMIN_CREDENTIALS.username && password === ADMIN_CREDENTIALS.password) {\r\n        stateManager.loginAsAdmin();\r\n        return;\r\n      }\r\n\r\n      // Regular user login\r\n      const response = await apiService.login(username, password);\r\n      \r\n      if (response.success) {\r\n        const user = {\r\n          nome: username,\r\n          senha: password,\r\n          tipo: response.tipo || 'Usuário',\r\n          pontos: response.pontos || 0\r\n        };\r\n        \r\n        stateManager.login(user, response.pontos || 0, user.tipo);\r\n      } else {\r\n        errorDiv.textContent = MESSAGES.LOGIN_ERROR;\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      errorDiv.textContent = MESSAGES.GENERIC_ERROR;\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  clearForm() {\r\n    const usernameInput = this.container.querySelector('#login-username');\r\n    const passwordInput = this.container.querySelector('#login-password');\r\n    const errorDiv = this.container.querySelector('#login-error');\r\n\r\n    usernameInput.value = '';\r\n    passwordInput.value = '';\r\n    errorDiv.textContent = '';\r\n  }\r\n}\r\n","// Componente de Tarefas\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { stateManager } from '@/services/state.js';\r\nimport { MESSAGES } from '@/utils/config.js';\r\nimport { validateRequired, validateTaskPoints, createLoadingButton, escapeHtml } from '@/utils/helpers.js';\r\n\r\nexport class TasksComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.tasks = [];\r\n    this.render();\r\n    this.setupEventListeners();\r\n    this.loadTasks();\r\n  }\r\n\r\n  render() {\r\n    const state = stateManager.getState();\r\n    const isAdmin = state.userType === 'Administrador';\r\n\r\n    this.container.innerHTML = `\r\n      ${isAdmin ? `\r\n        <div class=\"task-form\">\r\n          <h4>➕ Criar Nova Tarefa</h4>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" id=\"new-task-title\" placeholder=\"Título da tarefa\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <textarea id=\"new-task-description\" placeholder=\"Descrição da tarefa\"></textarea>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"number\" id=\"new-task-points\" placeholder=\"Pontos\" min=\"1\" />\r\n          </div>\r\n          <button id=\"create-task-button\" class=\"btn btn-primary\">Criar Tarefa</button>\r\n          <div id=\"task-form-error\" class=\"error-message\"></div>\r\n        </div>\r\n      ` : ''}\r\n      \r\n      <div id=\"task-list\" class=\"task-list\">\r\n        <div class=\"loading\">Carregando tarefas...</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    const state = stateManager.getState();\r\n    if (state.userType === 'Administrador') {\r\n      const createButton = this.container.querySelector('#create-task-button');\r\n      createButton?.addEventListener('click', () => this.handleCreateTask());\r\n\r\n      // Enter key support for inputs\r\n      const titleInput = this.container.querySelector('#new-task-title');\r\n      const pointsInput = this.container.querySelector('#new-task-points');\r\n      \r\n      [titleInput, pointsInput].forEach(input => {\r\n        input?.addEventListener('keypress', (e) => {\r\n          if (e.key === 'Enter') {\r\n            this.handleCreateTask();\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleCreateTask() {\r\n    const titleInput = this.container.querySelector('#new-task-title');\r\n    const descriptionInput = this.container.querySelector('#new-task-description');\r\n    const pointsInput = this.container.querySelector('#new-task-points');\r\n    const createButton = this.container.querySelector('#create-task-button');\r\n    const errorDiv = this.container.querySelector('#task-form-error');\r\n\r\n    const title = titleInput.value.trim();\r\n    const description = descriptionInput.value.trim();\r\n    const points = pointsInput.value.trim();\r\n\r\n    // Clear previous errors\r\n    errorDiv.textContent = '';\r\n\r\n    // Validation\r\n    const titleError = validateRequired(title, 'Título');\r\n    const descriptionError = validateRequired(description, 'Descrição');\r\n    const pointsError = validateTaskPoints(points);\r\n\r\n    if (titleError || descriptionError || pointsError) {\r\n      errorDiv.textContent = titleError || descriptionError || pointsError || '';\r\n      return;\r\n    }\r\n\r\n    const state = stateManager.getState();\r\n    if (!state.user) return;\r\n\r\n    const resetButton = createLoadingButton(createButton, '🔄 Criando...');\r\n\r\n    try {\r\n      const response = await apiService.createTask(title, description, parseInt(points), state.user.nome);\r\n      \r\n      if (response.success) {\r\n        // Clear form\r\n        titleInput.value = '';\r\n        descriptionInput.value = '';\r\n        pointsInput.value = '';\r\n        \r\n        // Reload tasks\r\n        await this.loadTasks();\r\n        \r\n        // Show success message\r\n        this.showSuccessMessage(MESSAGES.TASK_CREATED);\r\n      } else {\r\n        errorDiv.textContent = response.message || 'Erro ao criar tarefa.';\r\n      }\r\n    } catch (error) {\r\n      console.error('Create task error:', error);\r\n      errorDiv.textContent = MESSAGES.GENERIC_ERROR;\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async handleConcludeTask(taskId, points) {\r\n    const state = stateManager.getState();\r\n    if (!state.user) return;\r\n\r\n    const button = this.container.querySelector(`[data-task-id=\"${taskId}\"]`);\r\n    if (!button) return;\r\n\r\n    const resetButton = createLoadingButton(button, '🔄 Concluindo...');\r\n\r\n    try {\r\n      const response = await apiService.concludeTask(taskId, state.user.nome);\r\n      \r\n      if (response.success) {\r\n        // Update user points\r\n        const newPoints = state.userPoints + points;\r\n        stateManager.updatePoints(newPoints);\r\n        \r\n        // Reload tasks\r\n        await this.loadTasks();\r\n        \r\n        // Show success message\r\n        this.showSuccessMessage(MESSAGES.TASK_COMPLETED);\r\n      } else {\r\n        alert(response.message || 'Erro ao concluir tarefa.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Conclude task error:', error);\r\n      alert(MESSAGES.GENERIC_ERROR);\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async loadTasks() {\r\n    const taskList = this.container.querySelector('#task-list');\r\n    \r\n    try {\r\n      this.tasks = await apiService.getTasks();\r\n      this.renderTasks();\r\n    } catch (error) {\r\n      console.error('Load tasks error:', error);\r\n      taskList.innerHTML = '<div class=\"error\">Erro ao carregar tarefas.</div>';\r\n    }\r\n  }\r\n\r\n  renderTasks() {\r\n    const taskList = this.container.querySelector('#task-list');\r\n    const state = stateManager.getState();\r\n    const isAdmin = state.userType === 'Administrador';\r\n\r\n    if (this.tasks.length === 0) {\r\n      taskList.innerHTML = '<div class=\"empty\">Nenhuma tarefa disponível.</div>';\r\n      return;\r\n    }\r\n\r\n    taskList.innerHTML = this.tasks.map(task => `\r\n      <div class=\"task-item\">\r\n        <div class=\"task-header\">\r\n          <h4>${escapeHtml(task.titulo)}</h4>\r\n          <span class=\"task-points\">${task.pontos} pts</span>\r\n        </div>\r\n        <div class=\"task-description\">\r\n          ${escapeHtml(task.descricao)}\r\n        </div>\r\n        ${isAdmin ? `\r\n          <div class=\"task-creator\">\r\n            <small>Criado por: ${escapeHtml(task.criador || 'Sistema')}</small>\r\n          </div>\r\n        ` : `\r\n          <div class=\"task-actions\">\r\n            <button \r\n              class=\"btn btn-success\" \r\n              data-task-id=\"${task.id}\"\r\n              onclick=\"window.taskComponent.concludeTask('${task.id}', ${task.pontos})\"\r\n            >\r\n              ✅ Concluir\r\n            </button>\r\n          </div>\r\n        `}\r\n      </div>\r\n    `).join('');\r\n\r\n    // Store reference for onclick handlers\r\n    window.taskComponent = {\r\n      concludeTask: (taskId, points) => this.handleConcludeTask(taskId, points)\r\n    };\r\n  }\r\n\r\n  showSuccessMessage(message) {\r\n    const taskList = this.container.querySelector('#task-list');\r\n    const successDiv = document.createElement('div');\r\n    successDiv.className = 'success-message';\r\n    successDiv.textContent = message;\r\n    \r\n    taskList.prepend(successDiv);\r\n    \r\n    setTimeout(() => {\r\n      successDiv.remove();\r\n    }, 3000);\r\n  }\r\n\r\n  refresh() {\r\n    this.loadTasks();\r\n  }\r\n}\r\n","// Componente de Recompensas/Prêmios\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { stateManager } from '@/services/state.js';\r\nimport { MESSAGES } from '@/utils/config.js';\r\nimport { createLoadingButton, escapeHtml } from '@/utils/helpers.js';\r\n\r\nexport class RewardsComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.rewards = [];\r\n    this.render();\r\n    this.loadRewards();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div id=\"rewards-list\" class=\"rewards-list\">\r\n        <div class=\"loading\">Carregando prêmios...</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async handleRedeemReward(rewardId, cost) {\r\n    const state = stateManager.getState();\r\n    if (!state.user) return;\r\n\r\n    if (state.userPoints < cost) {\r\n      alert(MESSAGES.INSUFFICIENT_POINTS);\r\n      return;\r\n    }\r\n\r\n    const button = this.container.querySelector(`[data-reward-id=\"${rewardId}\"]`);\r\n    if (!button) return;\r\n\r\n    const resetButton = createLoadingButton(button, '🔄 Resgatando...');\r\n\r\n    try {\r\n      const response = await apiService.redeemReward(rewardId, state.user.nome);\r\n      \r\n      if (response.success) {\r\n        // Update user points\r\n        const newPoints = state.userPoints - cost;\r\n        stateManager.updatePoints(newPoints);\r\n        \r\n        // Show success message\r\n        this.showSuccessMessage(MESSAGES.REWARD_REDEEMED);\r\n      } else {\r\n        alert(response.message || 'Erro ao resgatar prêmio.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Redeem reward error:', error);\r\n      alert(MESSAGES.GENERIC_ERROR);\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async loadRewards() {\r\n    const rewardsList = this.container.querySelector('#rewards-list');\r\n    \r\n    try {\r\n      this.rewards = await apiService.getRewards();\r\n      this.renderRewards();\r\n    } catch (error) {\r\n      console.error('Load rewards error:', error);\r\n      rewardsList.innerHTML = '<div class=\"error\">Erro ao carregar prêmios.</div>';\r\n    }\r\n  }\r\n\r\n  renderRewards() {\r\n    const rewardsList = this.container.querySelector('#rewards-list');\r\n    const state = stateManager.getState();\r\n    const isAdmin = state.userType === 'Administrador';\r\n\r\n    if (this.rewards.length === 0) {\r\n      rewardsList.innerHTML = '<div class=\"empty\">Nenhum prêmio disponível.</div>';\r\n      return;\r\n    }\r\n\r\n    rewardsList.innerHTML = this.rewards.map(reward => {\r\n      const canAfford = state.userPoints >= reward.custo;\r\n      \r\n      return `\r\n        <div class=\"reward-item ${!canAfford && !isAdmin ? 'unavailable' : ''}\">\r\n          <div class=\"reward-header\">\r\n            <h4>${escapeHtml(reward.nome)}</h4>\r\n            <span class=\"reward-cost\">${reward.custo} pts</span>\r\n          </div>\r\n          <div class=\"reward-description\">\r\n            ${escapeHtml(reward.descricao)}\r\n          </div>\r\n          ${!isAdmin ? `\r\n            <div class=\"reward-actions\">\r\n              <button \r\n                class=\"btn ${canAfford ? 'btn-primary' : 'btn-disabled'}\" \r\n                data-reward-id=\"${reward.id}\"\r\n                ${!canAfford ? 'disabled' : ''}\r\n                onclick=\"window.rewardsComponent.redeemReward('${reward.id}', ${reward.custo})\"\r\n              >\r\n                ${canAfford ? '🎁 Resgatar' : '🔒 Pontos insuficientes'}\r\n              </button>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n    }).join('');\r\n\r\n    // Store reference for onclick handlers\r\n    window.rewardsComponent = {\r\n      redeemReward: (rewardId, cost) => this.handleRedeemReward(rewardId, cost)\r\n    };\r\n  }\r\n\r\n  showSuccessMessage(message) {\r\n    const rewardsList = this.container.querySelector('#rewards-list');\r\n    const successDiv = document.createElement('div');\r\n    successDiv.className = 'success-message';\r\n    successDiv.textContent = message;\r\n    \r\n    rewardsList.prepend(successDiv);\r\n    \r\n    setTimeout(() => {\r\n      successDiv.remove();\r\n    }, 3000);\r\n  }\r\n\r\n  refresh() {\r\n    this.loadRewards();\r\n  }\r\n}\r\n","// Componente de Ranking\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { stateManager } from '@/services/state.js';\r\nimport { escapeHtml } from '@/utils/helpers.js';\r\n\r\nexport class RankingComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.ranking = [];\r\n    this.render();\r\n    this.loadRanking();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div id=\"ranking-list\" class=\"ranking-list\">\r\n        <div class=\"loading\">Carregando ranking...</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async loadRanking() {\r\n    const rankingList = this.container.querySelector('#ranking-list');\r\n    \r\n    try {\r\n      this.ranking = await apiService.getRanking();\r\n      this.renderRanking();\r\n    } catch (error) {\r\n      console.error('Load ranking error:', error);\r\n      rankingList.innerHTML = '<div class=\"error\">Erro ao carregar ranking.</div>';\r\n    }\r\n  }\r\n\r\n  renderRanking() {\r\n    const rankingList = this.container.querySelector('#ranking-list');\r\n    const state = stateManager.getState();\r\n    const currentUser = state.user?.nome;\r\n    const isAdmin = state.userType === 'Administrador';\r\n\r\n    if (this.ranking.length === 0) {\r\n      rankingList.innerHTML = '<div class=\"empty\">Nenhum usuário encontrado no ranking.</div>';\r\n      return;\r\n    }\r\n\r\n    rankingList.innerHTML = this.ranking.map((userRank, index) => {\r\n      const isCurrentUser = userRank.nome === currentUser && !isAdmin;\r\n      const position = index + 1;\r\n      \r\n      let badge = '';\r\n      let positionClass = '';\r\n      \r\n      if (position === 1) {\r\n        badge = '<span class=\"ranking-badge gold\">🥇</span>';\r\n        positionClass = 'top-1';\r\n      } else if (position === 2) {\r\n        badge = '<span class=\"ranking-badge silver\">🥈</span>';\r\n        positionClass = 'top-2';\r\n      } else if (position === 3) {\r\n        badge = '<span class=\"ranking-badge bronze\">🥉</span>';\r\n        positionClass = 'top-3';\r\n      }\r\n\r\n      return `\r\n        <div class=\"ranking-item ${positionClass} ${isCurrentUser ? 'current-user' : ''}\">\r\n          <div class=\"ranking-position\">#${position}</div>\r\n          <div class=\"ranking-name\">\r\n            ${escapeHtml(userRank.nome)}${isCurrentUser ? ' (Você)' : ''}\r\n          </div>\r\n          <div class=\"ranking-points\">${userRank.pontos} pts</div>\r\n          ${badge}\r\n        </div>\r\n      `;\r\n    }).join('');\r\n  }\r\n\r\n  refresh() {\r\n    this.loadRanking();\r\n  }\r\n}\r\n","// Componente de Histórico\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { stateManager } from '@/services/state.js';\r\nimport { escapeHtml } from '@/utils/helpers.js';\r\n\r\nexport class HistoryComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.history = [];\r\n    this.render();\r\n    this.loadHistory();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div id=\"history-list\" class=\"history-list\">\r\n        <div class=\"loading\">Carregando histórico...</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async loadHistory() {\r\n    const historyList = this.container.querySelector('#history-list');\r\n    const state = stateManager.getState();\r\n    \r\n    if (!state.user) return;\r\n\r\n    try {\r\n      if (state.userType === 'Administrador') {\r\n        this.history = await apiService.getAllHistory();\r\n      } else {\r\n        this.history = await apiService.getHistory(state.user.nome);\r\n      }\r\n      \r\n      this.renderHistory();\r\n    } catch (error) {\r\n      console.error('Load history error:', error);\r\n      historyList.innerHTML = '<div class=\"error\">Erro ao carregar histórico.</div>';\r\n    }\r\n  }\r\n\r\n  renderHistory() {\r\n    const historyList = this.container.querySelector('#history-list');\r\n    const state = stateManager.getState();\r\n    const isAdmin = state.userType === 'Administrador';\r\n\r\n    if (this.history.length === 0) {\r\n      historyList.innerHTML = '<div class=\"empty\">Nenhuma atividade encontrada.</div>';\r\n      return;\r\n    }\r\n\r\n    historyList.innerHTML = this.history.map(item => {\r\n      const typeIcon = item.tipo === 'Tarefa Concluída' ? '✅' : '🎁';\r\n      \r\n      return `\r\n        <div class=\"history-item ${isAdmin ? 'admin-history' : ''}\">\r\n          ${isAdmin ? `\r\n            <div class=\"history-header\">\r\n              <strong>${escapeHtml(item.usuario)}</strong>\r\n              <span class=\"history-date\">${escapeHtml(item.data)}</span>\r\n            </div>\r\n            <div class=\"history-content\">\r\n              ${typeIcon} ${escapeHtml(item.tipo)}: ${escapeHtml(item.descricao)} \r\n              <span class=\"history-points\">(${item.pontos})</span>\r\n            </div>\r\n          ` : `\r\n            <div class=\"history-single\">\r\n              <span class=\"history-date\">${escapeHtml(item.data)}</span>\r\n              <span class=\"history-separator\">—</span>\r\n              <span class=\"history-type\">${typeIcon} ${escapeHtml(item.tipo)}</span>\r\n              <span class=\"history-separator\">—</span>\r\n              <span class=\"history-description\">${escapeHtml(item.descricao)}</span>\r\n              <span class=\"history-points\">(${item.pontos})</span>\r\n            </div>\r\n          `}\r\n        </div>\r\n      `;\r\n    }).join('');\r\n  }\r\n\r\n  refresh() {\r\n    this.loadHistory();\r\n  }\r\n}\r\n","// Componente do Painel Administrativo\r\n\r\nimport { apiService } from '@/services/api.js';\r\nimport { MESSAGES } from '@/utils/config.js';\r\nimport { validateRequired, validatePoints, createLoadingButton, escapeHtml } from '@/utils/helpers.js';\r\n\r\nexport class AdminPanelComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.users = [];\r\n    this.currentFormMode = 'create';\r\n    this.currentEditUserId = null;\r\n    this.render();\r\n    this.setupEventListeners();\r\n    this.loadUsers();\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div class=\"admin-panel-content\">\r\n        <h3>👨‍💼 Painel Administrativo</h3>\r\n        \r\n        <div class=\"admin-section\">\r\n          <div class=\"admin-actions\">\r\n            <button id=\"show-user-form-button\" class=\"btn btn-primary\">➕ Criar Usuário</button>\r\n            <button id=\"refresh-users-button\" class=\"btn btn-secondary\">🔄 Atualizar Lista</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"user-form\" class=\"user-form\" style=\"display: none;\">\r\n          <div class=\"form-header\">\r\n            <h4 id=\"user-form-title\">Criar Novo Usuário</h4>\r\n            <button id=\"cancel-user-form\" class=\"btn btn-link\">✖️ Cancelar</button>\r\n          </div>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"form-user-name\">Nome do Usuário:</label>\r\n              <input type=\"text\" id=\"form-user-name\" placeholder=\"Digite o nome\" />\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"form-user-password\">Senha:</label>\r\n              <input type=\"password\" id=\"form-user-password\" placeholder=\"Digite a senha\" />\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"form-user-type\">Tipo:</label>\r\n              <select id=\"form-user-type\">\r\n                <option value=\"Usuário\">Usuário</option>\r\n                <option value=\"Administrador\">Administrador</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"form-user-points\">Pontos:</label>\r\n              <input type=\"number\" id=\"form-user-points\" placeholder=\"0\" min=\"0\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-actions\">\r\n            <button id=\"save-user-button\" class=\"btn btn-success\">💾 Salvar</button>\r\n          </div>\r\n          \r\n          <div id=\"user-form-error\" class=\"error-message\"></div>\r\n          <input type=\"hidden\" id=\"edit-user-id\" />\r\n        </div>\r\n\r\n        <div class=\"admin-section\">\r\n          <h4>👥 Usuários Cadastrados</h4>\r\n          <div id=\"users-list\" class=\"users-list\">\r\n            <div class=\"loading\">Carregando usuários...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    // Show user form button\r\n    const showFormButton = this.container.querySelector('#show-user-form-button');\r\n    showFormButton.addEventListener('click', () => this.showUserForm('create'));\r\n\r\n    // Refresh users button\r\n    const refreshButton = this.container.querySelector('#refresh-users-button');\r\n    refreshButton.addEventListener('click', () => this.loadUsers());\r\n\r\n    // Cancel form button\r\n    const cancelButton = this.container.querySelector('#cancel-user-form');\r\n    cancelButton.addEventListener('click', () => this.hideUserForm());\r\n\r\n    // Save user button\r\n    const saveButton = this.container.querySelector('#save-user-button');\r\n    saveButton.addEventListener('click', () => this.handleSaveUser());\r\n\r\n    // Enter key support for form inputs\r\n    const formInputs = this.container.querySelectorAll('#user-form input');\r\n    formInputs.forEach(input => {\r\n      input.addEventListener('keypress', (e) => {\r\n        if (e.key === 'Enter') {\r\n          this.handleSaveUser();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  showUserForm(mode, user = null) {\r\n    const form = this.container.querySelector('#user-form');\r\n    const title = this.container.querySelector('#user-form-title');\r\n    const nameInput = this.container.querySelector('#form-user-name');\r\n    const passwordInput = this.container.querySelector('#form-user-password');\r\n    const typeSelect = this.container.querySelector('#form-user-type');\r\n    const pointsInput = this.container.querySelector('#form-user-points');\r\n    const userIdInput = this.container.querySelector('#edit-user-id');\r\n    const errorDiv = this.container.querySelector('#user-form-error');\r\n\r\n    this.currentFormMode = mode;\r\n    errorDiv.textContent = '';\r\n\r\n    if (mode === 'create') {\r\n      title.textContent = 'Criar Novo Usuário';\r\n      nameInput.value = '';\r\n      passwordInput.value = '';\r\n      typeSelect.value = 'Usuário';\r\n      pointsInput.value = '0';\r\n      userIdInput.value = '';\r\n      this.currentEditUserId = null;\r\n    } else if (mode === 'edit' && user) {\r\n      title.textContent = 'Editar Usuário';\r\n      nameInput.value = user.nome;\r\n      passwordInput.value = user.senha;\r\n      typeSelect.value = user.tipo;\r\n      pointsInput.value = user.pontos.toString();\r\n      userIdInput.value = user.id || '';\r\n      this.currentEditUserId = user.id || null;\r\n    }\r\n\r\n    form.style.display = 'block';\r\n    nameInput.focus();\r\n  }\r\n\r\n  hideUserForm() {\r\n    const form = this.container.querySelector('#user-form');\r\n    form.style.display = 'none';\r\n    this.currentFormMode = 'create';\r\n    this.currentEditUserId = null;\r\n  }\r\n\r\n  async handleSaveUser() {\r\n    const nameInput = this.container.querySelector('#form-user-name');\r\n    const passwordInput = this.container.querySelector('#form-user-password');\r\n    const typeSelect = this.container.querySelector('#form-user-type');\r\n    const pointsInput = this.container.querySelector('#form-user-points');\r\n    const saveButton = this.container.querySelector('#save-user-button');\r\n    const errorDiv = this.container.querySelector('#user-form-error');\r\n\r\n    const name = nameInput.value.trim();\r\n    const password = passwordInput.value.trim();\r\n    const type = typeSelect.value;\r\n    const points = pointsInput.value.trim();\r\n\r\n    // Clear previous errors\r\n    errorDiv.textContent = '';\r\n\r\n    // Validation\r\n    const nameError = validateRequired(name, 'Nome');\r\n    const passwordError = validateRequired(password, 'Senha');\r\n    const pointsError = validatePoints(points);\r\n\r\n    if (nameError || passwordError || pointsError) {\r\n      errorDiv.textContent = nameError || passwordError || pointsError || '';\r\n      return;\r\n    }\r\n\r\n    const user = {\r\n      nome: name,\r\n      senha: password,\r\n      tipo: type,\r\n      pontos: parseInt(points)\r\n    };\r\n\r\n    const resetButton = createLoadingButton(saveButton, '🔄 Salvando...');\r\n\r\n    try {\r\n      let response;\r\n      \r\n      if (this.currentFormMode === 'create') {\r\n        response = await apiService.createUser(user);\r\n      } else {\r\n        if (!this.currentEditUserId) {\r\n          throw new Error('ID do usuário não encontrado');\r\n        }\r\n        user.id = this.currentEditUserId;\r\n        response = await apiService.updateUser(this.currentEditUserId, user);\r\n      }\r\n\r\n      if (response.success) {\r\n        this.hideUserForm();\r\n        await this.loadUsers();\r\n        \r\n        const message = this.currentFormMode === 'create' ? MESSAGES.USER_CREATED : MESSAGES.USER_UPDATED;\r\n        this.showSuccessMessage(message);\r\n      } else {\r\n        errorDiv.textContent = response.message || 'Erro ao salvar usuário.';\r\n      }\r\n    } catch (error) {\r\n      console.error('Save user error:', error);\r\n      errorDiv.textContent = MESSAGES.GENERIC_ERROR;\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async handleDeleteUser(userId, userName) {\r\n    if (!confirm(`Tem certeza que deseja excluir o usuário \"${userName}\"?\\n\\nEsta ação não pode ser desfeita.`)) {\r\n      return;\r\n    }\r\n\r\n    const button = this.container.querySelector(`[data-delete-user=\"${userId}\"]`);\r\n    if (!button) return;\r\n\r\n    const resetButton = createLoadingButton(button, '🔄 Excluindo...');\r\n\r\n    try {\r\n      const response = await apiService.deleteUser(userId);\r\n      \r\n      if (response.success) {\r\n        await this.loadUsers();\r\n        this.showSuccessMessage(MESSAGES.USER_DELETED);\r\n      } else {\r\n        alert(response.message || 'Erro ao excluir usuário.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Delete user error:', error);\r\n      alert(MESSAGES.GENERIC_ERROR);\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async handleStructureSheet() {\r\n    const button = this.container.querySelector('#structure-sheet-button');\r\n    if (!button) return;\r\n\r\n    const resetButton = createLoadingButton(button, '🔄 Estruturando...');\r\n\r\n    try {\r\n      const response = await apiService.structureSheet();\r\n      \r\n      if (response.success) {\r\n        alert(`✅ ${MESSAGES.SHEET_STRUCTURED}\\n\\n${response.message}`);\r\n        await this.loadUsers();\r\n      } else {\r\n        alert(`❌ Erro ao estruturar planilha:\\n\\n${response.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Structure sheet error:', error);\r\n      alert('❌ Erro ao estruturar planilha. Verifique o console para mais detalhes.');\r\n    } finally {\r\n      resetButton();\r\n    }\r\n  }\r\n\r\n  async loadUsers() {\r\n    const usersList = this.container.querySelector('#users-list');\r\n    \r\n    try {\r\n      const response = await apiService.getUsers();\r\n      \r\n      // Check if sheet needs to be structured\r\n      if (!response.success && response.message?.includes('não encontrada')) {\r\n        usersList.innerHTML = `\r\n          <div class=\"sheet-setup-warning\">\r\n            <h4>⚠️ Planilha Não Configurada</h4>\r\n            <p>A estrutura da planilha precisa ser criada.</p>\r\n            <button id=\"structure-sheet-button\" class=\"btn btn-primary\">\r\n              🛠️ Estruturar Planilha Automaticamente\r\n            </button>\r\n          </div>\r\n        `;\r\n        \r\n        // Add event listener for structure button\r\n        const structureButton = usersList.querySelector('#structure-sheet-button');\r\n        structureButton?.addEventListener('click', () => this.handleStructureSheet());\r\n        \r\n        return;\r\n      }\r\n\r\n      this.users = Array.isArray(response) ? response : (response.data || []);\r\n      this.renderUsers();\r\n    } catch (error) {\r\n      console.error('Load users error:', error);\r\n      usersList.innerHTML = '<div class=\"error\">Erro ao carregar usuários.</div>';\r\n    }\r\n  }\r\n\r\n  renderUsers() {\r\n    const usersList = this.container.querySelector('#users-list');\r\n\r\n    if (this.users.length === 0) {\r\n      usersList.innerHTML = '<div class=\"empty\">Nenhum usuário encontrado.</div>';\r\n      return;\r\n    }\r\n\r\n    usersList.innerHTML = this.users.map(user => `\r\n      <div class=\"user-item\">\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">${escapeHtml(user.nome)}</div>\r\n          <div class=\"user-details\">\r\n            <span class=\"user-points\">${user.pontos} pontos</span>\r\n            <span class=\"user-type ${user.tipo === 'Administrador' ? 'admin' : 'user'}\">\r\n              ${user.tipo}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"user-actions\">\r\n          <button \r\n            class=\"btn btn-sm btn-primary\" \r\n            onclick=\"window.adminPanel.editUser('${user.id}', '${escapeHtml(user.nome)}', '${escapeHtml(user.senha)}', '${user.tipo}', ${user.pontos})\"\r\n          >\r\n            ✏️ Editar\r\n          </button>\r\n          <button \r\n            class=\"btn btn-sm btn-danger\" \r\n            data-delete-user=\"${user.id}\"\r\n            onclick=\"window.adminPanel.deleteUser('${user.id}', '${escapeHtml(user.nome)}')\"\r\n          >\r\n            🗑️ Excluir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `).join('');\r\n\r\n    // Store reference for onclick handlers\r\n    window.adminPanel = {\r\n      editUser: (userId, nome, senha, tipo, pontos) => {\r\n        this.showUserForm('edit', { id: userId, nome, senha, tipo, pontos });\r\n      },\r\n      deleteUser: (userId, userName) => this.handleDeleteUser(userId, userName)\r\n    };\r\n  }\r\n\r\n  showSuccessMessage(message) {\r\n    const usersList = this.container.querySelector('#users-list');\r\n    const successDiv = document.createElement('div');\r\n    successDiv.className = 'success-message';\r\n    successDiv.textContent = message;\r\n    \r\n    usersList.prepend(successDiv);\r\n    \r\n    setTimeout(() => {\r\n      successDiv.remove();\r\n    }, 3000);\r\n  }\r\n\r\n  refresh() {\r\n    this.loadUsers();\r\n  }\r\n}\r\n","// Componente principal do Dashboard\r\n\r\nimport { stateManager } from '@/services/state.js';\r\nimport { TasksComponent } from './TasksComponent.js';\r\nimport { RewardsComponent } from './RewardsComponent.js';\r\nimport { RankingComponent } from './RankingComponent.js';\r\nimport { HistoryComponent } from './HistoryComponent.js';\r\nimport { AdminPanelComponent } from './AdminPanelComponent.js';\r\n\r\nexport class DashboardComponent {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.render();\r\n    this.setupEventListeners();\r\n    this.initializeComponents();\r\n    \r\n    // Subscribe to state changes\r\n    stateManager.subscribe(this.handleStateChange.bind(this));\r\n  }\r\n\r\n  render() {\r\n    this.container.innerHTML = `\r\n      <div class=\"dashboard-container\">\r\n        <header class=\"dashboard-header\">\r\n          <div class=\"user-info\">\r\n            <h2>Bem-vindo, <span id=\"user-name\"></span>!</h2>\r\n            <div class=\"user-stats\">\r\n              <span class=\"points\">Pontos: <span id=\"user-points\"></span></span>\r\n              <span class=\"type\" id=\"user-type\"></span>\r\n            </div>\r\n          </div>\r\n          <button id=\"logout-button\" class=\"btn btn-secondary\">Sair</button>\r\n        </header>\r\n\r\n        <div id=\"admin-panel-container\" class=\"admin-panel\" style=\"display: none;\"></div>\r\n\r\n        <div class=\"dashboard-content\">\r\n          <div class=\"dashboard-grid\">\r\n            <section class=\"dashboard-section\">\r\n              <h3>📋 Tarefas Disponíveis</h3>\r\n              <div id=\"tasks-container\"></div>\r\n            </section>\r\n\r\n            <section class=\"dashboard-section\">\r\n              <h3>🎁 Loja de Prêmios</h3>\r\n              <div id=\"rewards-container\"></div>\r\n            </section>\r\n\r\n            <section class=\"dashboard-section\">\r\n              <h3>🏆 Ranking</h3>\r\n              <div id=\"ranking-container\"></div>\r\n            </section>\r\n\r\n            <section class=\"dashboard-section\">\r\n              <h3 id=\"history-title\">📊 Histórico de Atividades</h3>\r\n              <div id=\"history-container\"></div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  setupEventListeners() {\r\n    const logoutButton = this.container.querySelector('#logout-button');\r\n    logoutButton.addEventListener('click', () => {\r\n      stateManager.logout();\r\n    });\r\n  }\r\n\r\n  initializeComponents() {\r\n    const tasksContainer = this.container.querySelector('#tasks-container');\r\n    const rewardsContainer = this.container.querySelector('#rewards-container');\r\n    const rankingContainer = this.container.querySelector('#ranking-container');\r\n    const historyContainer = this.container.querySelector('#history-container');\r\n\r\n    this.tasksComponent = new TasksComponent(tasksContainer);\r\n    this.rewardsComponent = new RewardsComponent(rewardsContainer);\r\n    this.rankingComponent = new RankingComponent(rankingContainer);\r\n    this.historyComponent = new HistoryComponent(historyContainer);\r\n  }\r\n\r\n  handleStateChange(state) {\r\n    if (!state.user) return;\r\n\r\n    // Update user info display\r\n    const userNameElement = this.container.querySelector('#user-name');\r\n    const userPointsElement = this.container.querySelector('#user-points');\r\n    const userTypeElement = this.container.querySelector('#user-type');\r\n    const historyTitle = this.container.querySelector('#history-title');\r\n    const adminPanelContainer = this.container.querySelector('#admin-panel-container');\r\n\r\n    userNameElement.textContent = state.user.nome;\r\n    userPointsElement.textContent = state.userPoints.toString();\r\n    userTypeElement.textContent = state.userType || '';\r\n\r\n    // Handle admin panel\r\n    if (state.userType === 'Administrador') {\r\n      adminPanelContainer.style.display = 'block';\r\n      historyTitle.textContent = '📊 Histórico de Todos os Usuários';\r\n      \r\n      if (!this.adminPanelComponent) {\r\n        this.adminPanelComponent = new AdminPanelComponent(adminPanelContainer);\r\n      }\r\n    } else {\r\n      adminPanelContainer.style.display = 'none';\r\n      historyTitle.textContent = '📊 Histórico de Atividades';\r\n      this.adminPanelComponent = null;\r\n    }\r\n\r\n    // Refresh all components\r\n    this.refreshComponents();\r\n  }\r\n\r\n  refreshComponents() {\r\n    this.tasksComponent.refresh();\r\n    this.rewardsComponent.refresh();\r\n    this.rankingComponent.refresh();\r\n    this.historyComponent.refresh();\r\n    \r\n    if (this.adminPanelComponent) {\r\n      this.adminPanelComponent.refresh();\r\n    }\r\n  }\r\n\r\n  refresh() {\r\n    this.refreshComponents();\r\n  }\r\n}\r\n","// Aplicação Principal\r\n\r\nimport { stateManager } from '@/services/state.js';\r\nimport { LoginComponent } from '@/components/LoginComponent.js';\r\nimport { DashboardComponent } from '@/components/DashboardComponent.js';\r\n\r\nexport class App {\r\n  constructor(container) {\r\n    this.container = container;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // Subscribe to state changes\r\n    stateManager.subscribe(this.handleStateChange.bind(this));\r\n    \r\n    // Initialize with current state\r\n    this.handleStateChange(stateManager.getState());\r\n  }\r\n\r\n  handleStateChange(state) {\r\n    if (state.user) {\r\n      this.showDashboard();\r\n    } else {\r\n      this.showLogin();\r\n    }\r\n  }\r\n\r\n  showLogin() {\r\n    this.container.innerHTML = '<div id=\"login-container\"></div>';\r\n    \r\n    const loginContainer = this.container.querySelector('#login-container');\r\n    new LoginComponent(loginContainer);\r\n  }\r\n\r\n  showDashboard() {\r\n    this.container.innerHTML = '<div id=\"dashboard-container\"></div>';\r\n    \r\n    const dashboardContainer = this.container.querySelector('#dashboard-container');\r\n    new DashboardComponent(dashboardContainer);\r\n  }\r\n}\r\n","// Arquivo principal da aplicação\r\n\r\nimport { App } from './App.js';\r\nimport './styles/main.css';\r\n\r\n// Initialize the application when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const appContainer = document.getElementById('app');\r\n  \r\n  if (!appContainer) {\r\n    throw new Error('Container #app não encontrado no DOM');\r\n  }\r\n\r\n  // Initialize the main application\r\n  new App(appContainer);\r\n  \r\n  console.log('🚀 Sistema de Gamificação de Tarefas inicializado!');\r\n});\r\n"],"names":["CONFIG","ADMIN_CREDENTIALS","MESSAGES","StateManager","newState","listener","user","points","type","adminUser","stateManager","ApiService","username","password","error","data","title","description","creator","taskId","rewardId","userId","apiService","validateRequired","value","fieldName","validatePoints","validateTaskPoints","escapeHtml","text","div","createLoadingButton","button","loadingText","originalText","originalDisabled","LoginComponent","container","usernameInput","passwordInput","loginButton","input","e","errorDiv","usernameError","passwordError","resetButton","response","TasksComponent","isAdmin","createButton","titleInput","pointsInput","descriptionInput","titleError","descriptionError","pointsError","state","newPoints","taskList","task","message","successDiv","RewardsComponent","cost","rewardsList","reward","canAfford","RankingComponent","rankingList","currentUser","_a","userRank","index","isCurrentUser","position","badge","positionClass","HistoryComponent","historyList","item","typeIcon","AdminPanelComponent","mode","form","nameInput","typeSelect","userIdInput","saveButton","name","nameError","userName","usersList","structureButton","nome","senha","tipo","pontos","DashboardComponent","tasksContainer","rewardsContainer","rankingContainer","historyContainer","userNameElement","userPointsElement","userTypeElement","historyTitle","adminPanelContainer","App","loginContainer","dashboardContainer","appContainer"],"mappings":"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"}